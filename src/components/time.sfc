<template>
    {% import TimeChanges from './time/changes.sfc' %}

    <thead>
        <tr>
            <th colspan="5" class="picker-switch" :onclick={{changeMode.bind( this, 'dom' )}}>
                {{value | formatDate( 1 + 2 + 4 + 8 )}}
            </th>
        </tr>
    </thead>
    <tbody>
        <TimeChanges
            symbol={{incSymbol}}
            delta={{1}}
            onChange={{this$.change}}
        />
        <tr>
            <td class="hour" :onclick={{changeMode.bind( this, 'hours' )}}>
                {{date | formatDate( 16 )}}
            </td>
            <td>:</td>
            <td class="minute" :onclick={{changeMode.bind( this, 'minutes' )}}>
                {{date | formatDate( 32 )}}
            </td>
            <td>:</td>
            <td class="second" :onclick={{changeMode.bind( this, 'seconds' )}}>
                {{date | formatDate( 64 )}}
            </td>
        </tr>
        <TimeChanges
            symbol={{decSymbol}}
            delta={{-1}}
            onChange={{this$.change}}
        />
    </tbody>
</template>

<script>
    import { formatDate, change } from '../utils/date';

    function Time( options ) {
        const date = $();
        const changeValue = $();

        const state = options( {
            [ $.value ]: new Date(),
            [ date ]: new Date(),

            [ $.incSymbol ]: '+',
            [ $.decSymbol ]: String.fromCharCode( 0x2013 )
        } );

        this.filters.formatDate = formatDate;

        this$.change = ( type, delta ) => state[ changeValue ](
            change( state[ date ], type, delta )
        );
    }

    export default Component( Template, Time );
</script>
